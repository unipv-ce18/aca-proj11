<div id="plan1" class="step" data-x="2000" data-y="1500" data-z="1000" data-scale="2" data-rotate-z="90">
    <p>
        We moved to a custom partitioning scheme to divide the image in blocks
    </p>
    <img src="<%=require(REPORT_IMAGES_DIR + '06-planning1.png')%>">
</div>

<div id="plan2" class="step" data-x="2000" data-y="1500" data-z="600" data-scale="2" data-rotate-z="90">
    <p>
        To overcome excessive thread allocation for smaller images, we switched to <br><strong>fixed size chunking</strong>;
        chunks are evenly split among the threads
    </p>
    <img src="<%=require(REPORT_IMAGES_DIR + '06-planning2.png')%>">

</div>

<div id="plan3" class="step" data-x="2000" data-y="1500" data-z="300" data-scale="2" data-rotate-z="90">
    <img src="<%=require(REPORT_IMAGES_DIR + '06-planning3.png')%>">
    <p>
Then we added further rows as needed to avoid leaving unallocated excess cores
    </p>

</div>

<div id="plan4" class="step" data-x="2000" data-y="1500" data-z="0" data-scale="2" data-rotate-z="90">
    <p>
        In the end a set of chunks is assigned to each thread, <br>different <em>kernel types</em> are used to process the borders
    </p>
    <img src="<%=require(REPORT_IMAGES_DIR + '06-planning4.png')%>">
    <div class="additional-content">
        <iframe src="<%= require('!!file-loader!../../../contrib/planner-js/planner.html') %>"></iframe>
    </div>
</div>
