<div id="cuda1" class="step" data-x="1000" data-y="3000" data-z="0" data-rotate-z="90">
    <h1>An alternative approach: CUDA</h1>
    <ul>
        <li>
            <h3>Thread</h3>
            <p>
                Base unit of computation,<br> single instance of a kernel
            </p>
        </li>
        <li>
            <h3>Block</h3>
            <p>
                A bunch of threads to be worked on together in a <em>streaming multiprocessor</em>
            </p>
        </li>
        <li>
            <h3>Grid</h3>
            <p>
                A multidimensional group of blocks, sized as needed
            </p>
        </li>
    </ul>

    <div class="notes">
        Warps and SMs, no speculative execution/branch prediction
    </div>
</div>

<div id="cuda2" class="step" data-x="2000" data-y="3500" data-z="0" data-rotate-z="120">
    <h1>Implementation</h1>

    <ul>
        <li><strong>Each thread</strong> works over a single pixel;</li>
        <li><strong>Blocks</strong> are square and sized to allocate the highest number of threads;</li>
        <li>Blocks are arranged in a <strong>grid</strong> to process the whole image.</li>
    </ul>

    <p>
        Blocks and Threads are automatically scheduled by the runtime over the available <em>CUDA cores</em>.
    </p>
    <div class="notes">2D grid with the size of the image over the size of a single block.
        we measured timings by using the device events provided by the CUDA API.
    </div>
</div>

<div id="cuda3" class="step" data-x="3000" data-y="4000" data-z="0" data-rotate-z="150">
    <h1>NVIDIA CUDA results</h1>
    <%= require("!!ejs-loader!" + REPORT_IMAGES_DIR + "bench_cuda.svg")() %>
    <div class="notes">difficult to compute a precise theoretical speedup due to architectural differences
        difference from theoretical and real speedup
        space for optimizations cause of difference in generations
    </div>
</div>
